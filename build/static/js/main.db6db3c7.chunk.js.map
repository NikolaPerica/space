{"version":3,"sources":["components/neofeed.js","components/header.js","components/nextlaunches.js","components/home.js","components/astropod.js","components/solar.js","components/agencies.js","components/stations.js","components/patches.js","components/agencydetail.js","components/planetdetails.js","components/flightlist.js","App.js","reportWebVitals.js","index.js"],"names":["cardStyles","height","backgroundColor","boxShadow","color","NeoFeed","Component","constructor","super","this","handleStartDateChange","date","nextDay","Date","setDate","getDate","setState","startDate","endDate","neoData","fetchNeoData","state","error","getTime","componentDidMount","formattedStartDate","toISOString","slice","formattedEndDate","apiUrl","concat","axios","get","then","response","data","catch","console","render","React","createElement","style","padding","paddingTop","className","DatePicker","selected","onChange","dateFormat","margin","Grid","container","spacing","Object","keys","near_earth_objects","map","Fragment","key","neo","item","id","xs","sm","md","lg","Card","elevated","sx","CardContent","Typography","variant","component","name","absolute_magnitude_h","href","nasa_jpl_url","target","rel","estimated_diameter","kilometers","estimated_diameter_min","estimated_diameter_max","is_potentially_hazardous_asteroid","close_approach_data","approach","index","close_approach_date_full","relative_velocity","kilometers_per_second","miss_distance","orbiting_body","is_sentry_object","Header","src","alt","Link","to","display","flexDirection","justifyContent","NextLaunches","launches","result","textAlign","launch","provider","vehicle","launch_description","date_str","pad","location","country","quicktext","Home","Astropod","apodData","title","url","maxHeight","explanation","copyright","Solar","planets","bodies","usemap","coords","shape","Agencies","fetchAgencies","page","nextUrl","agencies","results","totalPages","Math","ceil","count","currentPage","next","handlePageChange","newPage","agency","logo_url","maxWidth","onClick","disabled","Stations","_this","fetchStations","arguments","length","undefined","previousUrl","stations","previous","isNext","formatDate","dateString","year","month","day","split","station","status","orbit","founded","deorbited","image_url","Patches","fetchPatches","patches","patch","AgencyDetail","useParams","agencyData","setAgencyData","useState","setError","useEffect","country_code","type","description","founding_year","PlanetDetails","planetData","setPlanetData","englishName","avgTemp","moons","moon","FlightList","JSON","stringify","App","Router","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","StrictMode"],"mappings":"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","file":"static/js/main.db6db3c7.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport { Grid, Card, CardContent, Typography } from '@mui/material';\r\n\r\nconst cardStyles = {\r\n  height: '100%',\r\n  backgroundColor: 'rgba(0, 51, 102, 0.4)',\r\n  boxShadow: 20,\r\n  color: '#C0C0C0'\r\n};\r\n\r\nclass NeoFeed extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      neoData: null,\r\n      error: null,\r\n      startDate: new Date(),\r\n      endDate: new Date(new Date().getTime() + 24 * 60 * 60 * 1000),\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchNeoData();\r\n  }\r\n\r\n  fetchNeoData() {\r\n    const apiKey = '4V3jYNGi2bKyWAauYFqdmuOWP7ZBhTgP9PfjnCUE';\r\n    const { startDate, endDate } = this.state;\r\n    const formattedStartDate = startDate.toISOString().slice(0, 10);\r\n    const formattedEndDate = endDate.toISOString().slice(0, 10);\r\n    const apiUrl = `https://api.nasa.gov/neo/rest/v1/feed?start_date=${formattedStartDate}&end_date=${formattedEndDate}&api_key=${apiKey}`;\r\n\r\n    axios\r\n      .get(apiUrl)\r\n      .then((response) => {\r\n        this.setState({\r\n          neoData: response.data,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching NEO data:', error);\r\n        this.setState({\r\n          error: 'Failed to fetch NEO data',\r\n        });\r\n      });\r\n  }\r\n\r\n  handleStartDateChange = (date) => {\r\n    const nextDay = new Date(date);\r\n    nextDay.setDate(nextDay.getDate() + 1);\r\n    this.setState({ startDate: date, endDate: nextDay, neoData: null }, this.fetchNeoData);\r\n  };\r\n\r\n  render() {\r\n    const { neoData, error, startDate } = this.state;\r\n\r\n    return (\r\n      <div style={{ \r\n        padding: '50px',\r\n        paddingTop: '15px',\r\n        color: '#C0C0C0' }}>\r\n        <h1 className=\"text-3xl font-bold flex items-center justify-center\">Near Earth Object Feed</h1>\r\n        <div className=\"flex items-center justify-center black\">\r\n          <DatePicker\r\n          className=\"flex items-center justify-center black\"\r\n            selected={startDate}\r\n            onChange={this.handleStartDateChange}\r\n            dateFormat=\"dd/MM/yyyy\"\r\n            style={{ color: '#FFFFFF', margin: '50px' }}\r\n          />\r\n          \r\n        </div>\r\n        <p><br></br></p>\r\n        {error ? (\r\n          <p>Error: {error}</p>\r\n        ) : neoData ? (\r\n          <Grid container spacing={2}>\r\n            {Object.keys(neoData.near_earth_objects).map((date) => (\r\n              <React.Fragment key={date}>\r\n                {neoData.near_earth_objects[date].map((neo) => (\r\n                  <Grid item key={neo.id} xs={12} sm={6} md={4} lg={3}>\r\n                    <Card elevated sx={{ boxShadow: 3 }} style={cardStyles}>\r\n                      <CardContent>\r\n                        <Typography variant=\"h5\" component=\"div\">\r\n                          <strong>Name:</strong> {neo.name}\r\n                        </Typography>\r\n                        <Typography variant=\"h5\" component=\"div\">\r\n                          <strong>Absolute Magnitude (H):</strong> {neo.absolute_magnitude_h}\r\n                        </Typography>\r\n                        <Typography variant=\"h5\" component=\"div\">\r\n                          <strong>NASA JPL URL:</strong>{' '}\r\n                          <a href={neo.nasa_jpl_url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                            Visit JPL\r\n                          </a>\r\n                        </Typography>\r\n                        <Typography variant=\"h5\" component=\"div\">\r\n                          <strong>Estimated Diameter:</strong>{' '}\r\n                          {`${neo.estimated_diameter.kilometers.estimated_diameter_min} - ${neo.estimated_diameter.kilometers.estimated_diameter_max} kilometers`}\r\n                        </Typography>\r\n                        <Typography variant=\"h5\" component=\"div\">\r\n                          <strong>Is Potentially Hazardous Asteroid:</strong>{' '}\r\n                          {neo.is_potentially_hazardous_asteroid ? 'Yes' : 'No'}\r\n                        </Typography>\r\n                        <Typography variant=\"h5\" component=\"div\">\r\n                          <strong>Close Approach Data</strong>\r\n                        </Typography>\r\n                        {neo.close_approach_data.map((approach, index) => (\r\n                          <div key={index}>\r\n                            <Typography variant=\"h6\">\r\n                              <strong>Close Approach Date and Time:</strong> {approach.close_approach_date_full}\r\n                            </Typography>\r\n                            <Typography variant=\"h6\">\r\n                              <strong>Relative Velocity:</strong> {`${approach.relative_velocity.kilometers_per_second} km/s`}\r\n                            </Typography>\r\n                            <Typography variant=\"h6\">\r\n                              <strong>Miss Distance:</strong> {`${approach.miss_distance.kilometers} kilometers`}\r\n                            </Typography>\r\n                            <Typography variant=\"h6\">\r\n                              <strong>Orbiting Body:</strong> {approach.orbiting_body}\r\n                            </Typography>\r\n                          </div>\r\n                        ))}\r\n                        <Typography variant=\"h5\" component=\"div\">\r\n                          <strong>Is Sentry Object:</strong> {neo.is_sentry_object ? 'Yes' : 'No'}\r\n                        </Typography>\r\n                      </CardContent>\r\n                    </Card>\r\n                  </Grid>\r\n                ))}\r\n              </React.Fragment>\r\n            ))}\r\n          </Grid>\r\n        ) : (\r\n          <p>Loading NEO data...</p>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NeoFeed;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom'; // Import the Link component\r\nimport '../Header.css';\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className=\"header\">\r\n      \r\n        <img\r\n          src=\"/solar/pngtree-logo-space-image_321300-removebg-preview.png\"\r\n          alt=\"NASA Logo\"\r\n          className=\"nasa-logo\"\r\n        />\r\n        <Link to=\"/\" className=\"nav-link\">\r\n            <h1 className=\"nasa-name\">Home</h1>\r\n        </Link>\r\n        <Link to=\"/neofeed\" className=\"nav-link\">\r\n            <h1 className=\"nasa-name\">Near Earth Object Feed</h1>\r\n        </Link>\r\n        <Link to=\"/nextlaunches\" className=\"nav-link\">\r\n            <h1 className=\"nasa-name\">Next launches</h1>\r\n        </Link>\r\n        <Link to=\"/photo\" className=\"nav-link\">\r\n            <h1 className=\"nasa-name\">Photo of the day</h1>\r\n        </Link>\r\n        <Link to=\"/planets\" className=\"nav-link\">\r\n            <h1 className=\"nasa-name\">Planets</h1>\r\n        </Link>\r\n        <Link to=\"/agencies\" className=\"nav-link\">\r\n            <h1 className=\"nasa-name\">Agencies</h1>\r\n        </Link>\r\n        <Link to=\"/stations\" className=\"nav-link\">\r\n            <h1 className=\"nasa-name\">Stations</h1>\r\n        </Link>\r\n        <Link to=\"/patches\" className=\"nav-link\">\r\n            <h1 className=\"nasa-name\">Mission patches</h1>\r\n        </Link>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Grid, Card, CardContent, Typography } from '@mui/material';\r\n\r\nconst cardStyles = {\r\n  height: '100%',\r\n  backgroundColor: 'rgba(0, 51, 102, 0.4)',\r\n  boxShadow: 20,\r\n  color: '#C0C0C0',\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  justifyContent: 'space-between', // Center content vertically\r\n};\r\n\r\nclass NextLaunches extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      launches: [],\r\n      error: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get('https://fdo.rocketlaunch.live/json/launches/next/5')\r\n      .then((response) => {\r\n        this.setState({ launches: response.data.result });\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ error: 'Failed to fetch launch data' });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { launches, error } = this.state;\r\n\r\n    return (\r\n      <div style={{ padding: '50px', paddingTop: '15px', color: '#C0C0C0', textAlign: 'center' }}>\r\n        <h1 className=\"text-4xl mb-10 pb-10\"><strong>Next 5 Rocket Launches</strong></h1>\r\n        <Grid container spacing={2}>\r\n          {error ? (\r\n            <p>Error: {error}</p>\r\n          ) : (\r\n            launches.map((launch) => (\r\n              <Grid item xs={12} sm={6} md={4} key={launch.id}>\r\n                <Card style={cardStyles}>\r\n                  <CardContent>\r\n                    <Typography variant=\"h6\"><strong>{launch.name}</strong></Typography>\r\n                    <Typography><strong>Provider:</strong> {launch.provider.name}</Typography>\r\n                    <Typography><strong>Vehicle:</strong> {launch.vehicle.name}</Typography>\r\n                    <Typography><strong>Launch Description:</strong> {launch.launch_description}</Typography>\r\n                    <Typography><strong>Launch Date:</strong> {launch.date_str}</Typography>\r\n                    <Typography><strong>Location: </strong>{launch.pad.location.name}, {launch.pad.location.country}</Typography>\r\n                    <Typography><strong>Detail: </strong>{launch.quicktext}</Typography>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n            ))\r\n          )}\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NextLaunches;\r\n","import React from \"react\";\r\n\r\nexport default function Home() {\r\n  return (\r\n    <section id=\"home\">\r\n        <div>\r\n            Weclome to space data page\r\n        </div>\r\n    </section>\r\n  );\r\n}","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nclass Astropod extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      apodData: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Replace 'YOUR_API_KEY' with your NASA API key\r\n    const apiKey = '4V3jYNGi2bKyWAauYFqdmuOWP7ZBhTgP9PfjnCUE';\r\n    const apiUrl = `https://api.nasa.gov/planetary/apod?api_key=${apiKey}`;\r\n\r\n    axios\r\n      .get(apiUrl)\r\n      .then((response) => {\r\n        this.setState({ apodData: response.data });\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching APOD data:', error);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { apodData } = this.state;\r\n\r\n    if (!apodData) {\r\n      return <div className=\"h-screen flex items-center justify-center\">Loading APOD data...</div>;\r\n    }\r\n\r\n    return (\r\n      <div className=\"h-96 flex m-48 flex-col items-center justify-center\" style={{color: '#C0C0C0'}}>\r\n        <h1 className=\"text-3xl font-bold\">{apodData.title}</h1>\r\n        <img\r\n          src={apodData.url}\r\n          alt={apodData.title}\r\n          className=\"max-w-lg object-scale-down rounded\" style={{ maxHeight: '500px' }} \r\n        />\r\n        <p className=\"p-4\">{apodData.explanation}</p>\r\n        <p className=\"mt-4\">Copyright: {apodData.copyright}</p>\r\n        <p className=\"mt-2\">Date: {apodData.date}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Astropod;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Solar extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      planets: [],\r\n      error: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get('https://api.le-systeme-solaire.net/rest/bodies?filter[]=isPlanet,eq,true&order=aphelion,asc')\r\n      .then((response) => {\r\n        this.setState({ planets: response.data.bodies });\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ error: 'Failed to fetch solar system data' });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { planets, error } = this.state;\r\n\r\n    return (\r\n      <div >\r\n\r\n      <h1 className=\"text-3xl flex justify-center items-center\"><strong>Planets and Their Moons</strong></h1>\r\n\r\n      {/* Image Map Generated by http://www.image-map.net/ */}\r\n      <img src=\"https://media.hswstatic.com/eyJidWNrZXQiOiJjb250ZW50Lmhzd3N0YXRpYy5jb20iLCJrZXkiOiJnaWZcL3BsYW5ldC1vcmRlci5qcGciLCJlZGl0cyI6eyJyZXNpemUiOnsid2lkdGgiOjgyOH19fQ==\" usemap=\"#image-map\"></img>\r\n\r\n      <map name=\"image-map\">\r\n          <area target=\"\" alt=\"Mercury\" title=\"Mercury\" href=\"/planet/mercure\" coords=\"186,216,19\" shape=\"circle\"></area>\r\n          <area target=\"\" alt=\"Venus\" title=\"Venus\" href=\"/planet/venus\" coords=\"222,216,18\" shape=\"circle\"></area>\r\n          <area target=\"\" alt=\"Earth\" title=\"Earth\" href=\"/planet/terre\" coords=\"273,217,26\" shape=\"circle\"></area>\r\n          <area target=\"\" alt=\"Mars\" title=\"Mars\" href=\"/planet/mars\" coords=\"319,217,21\" shape=\"circle\"></area>\r\n          <area target=\"\" alt=\"Jupiter\" title=\"Jupiter\" href=\"/planet/jupiter\" coords=\"405,216,51\" shape=\"circle\"></area>\r\n          <area target=\"\" alt=\"Saturn\" title=\"Saturn\" href=\"/planet/saturne\" coords=\"561,217,62\" shape=\"circle\"></area>\r\n          <area target=\"\" alt=\"Uranus\" title=\"Uranus\" href=\"/planet/uranus\" coords=\"658,217,31\" shape=\"circle\"></area>\r\n          <area target=\"\" alt=\"Neptune\" title=\"Neptune\" href=\"/planet/neptune\" coords=\"724,219,25\" shape=\"circle\"></area>\r\n          <area target=\"\" alt=\"Sun\" title=\"Sun\" href=\"/planet/soleil\" coords=\"111,296,94,411,74,464,1,465,2,0,37,4,90,90,107,172\" shape=\"poly\"></area>\r\n      </map>\r\n        <br></br>\r\n       {/* {error ? (\r\n          <p>Error: {error}</p>\r\n        ) : planets.length > 0 ? (\r\n          <ul>\r\n            {planets.map((planet) => (\r\n              <li key={planet.id}>\r\n\r\n                <h2 className=\"2xl\" ><strong>{planet.englishName}</strong></h2>\r\n                <p>Latin name: {planet.name}</p>\r\n                <p>Mean temperature: {planet.avgTemp} K ({planet.avgTemp-273.15} °C)</p>\r\n                <p><strong>Moons</strong></p>\r\n                {planet.moons && planet.moons.length > 0 ? (\r\n                  <ol>\r\n                    {planet.moons.map((moon) => (\r\n                      <li key={moon.rel}>\r\n                        {moon.moon}\r\n                      </li>\r\n                    ))}\r\n                  </ol>\r\n                ) : (\r\n                  <p>No moons for this planet.</p>\r\n                )}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          <p>No planets data available.</p>\r\n        )}*/}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Solar;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { Grid, Card, CardContent, Typography } from '@mui/material';\r\n\r\nconst cardStyles = {\r\n  height: '100%',\r\n  backgroundColor: 'rgba(0, 51, 102, 0.4)',\r\n  boxShadow: 20,\r\n  color: '#C0C0C0'\r\n};\r\n\r\nclass Agencies extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      agencies: [],\r\n      currentPage: 1,\r\n      totalPages: 1,\r\n      error: null,\r\n      nextUrl: 'https://lldev.thespacedevs.com/2.2.0/agencies/',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchAgencies(1);\r\n  }\r\n\r\n  fetchAgencies = (page) => {\r\n    axios\r\n      .get(this.state.nextUrl)\r\n      .then((response) => {\r\n        this.setState({\r\n          agencies: response.data.results,\r\n          totalPages: Math.ceil(response.data.count / 10),\r\n          currentPage: page,\r\n          error: null,\r\n          nextUrl: response.data.next,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ error: 'Failed to fetch launch data' });\r\n      });\r\n  }\r\n\r\n  handlePageChange = (newPage) => {\r\n    this.fetchAgencies(newPage);\r\n  }\r\n\r\n  render() {\r\n    const { agencies, error, currentPage, totalPages } = this.state;\r\n\r\n    return (\r\n      <div style={{ \r\n        padding: '50px',\r\n        paddingTop: '15px',\r\n        color: '#C0C0C0' }}>\r\n        <h1 className=\"text-4xl flex justify-center items-center\">\r\n          <strong>List of Space Agencies</strong>\r\n        </h1>\r\n        {error ? (\r\n          <p>Error: {error}</p>\r\n        ) : (\r\n          <Grid container spacing={2}>\r\n            {agencies.map((agency) => (\r\n              <Grid item key={agency.id} xs={12} sm={6} md={4} lg={3}>\r\n                <Card Card elevated sx={{ boxShadow: 3 }} style={cardStyles}>\r\n                  <CardContent>\r\n                    <Typography variant=\"h5\" component=\"div\">\r\n                      <Link to={`/agency/${agency.id}`}>\r\n                        <strong>{agency.name}</strong>\r\n                      </Link>\r\n                    </Typography>\r\n                    {agency.logo_url ? (\r\n                      <img src={agency.logo_url} alt={`${agency.name} Logo`} style={{ maxWidth: '100%' }} />\r\n                    ) : (\r\n                      <p>No Logo</p>\r\n                    )}\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        )}\r\n\r\n        <div>\r\n          <p className=\"m-10\">Page {currentPage} of {totalPages}</p>\r\n          <button className=\"bg-blue-500 hover-bg-blue-400 text-white font-bold py-2 px-4 border-b-4 border-blue-700 hover:border-blue-500 rounded m-10\" onClick={() => this.handlePageChange(currentPage - 1)} disabled={currentPage === 1}>\r\n            Previous Page\r\n          </button>\r\n          <button className=\"bg-blue-500 hover-bg-blue-400 text-white font-bold py-2 px-4 border-b-4 border-blue-700 hover:border-blue-500 rounded\" onClick={() => this.handlePageChange(currentPage + 1)} disabled={currentPage === totalPages}>\r\n            Next Page\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Agencies;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Grid, Card, CardContent, Typography, Link } from '@mui/material';\r\nimport { spacing } from '@mui/system';\r\n\r\nconst cardStyles = {\r\n  height: '100%',\r\n  backgroundColor: 'rgba(0, 51, 102, 0.4)',\r\n  boxShadow: 20,\r\n  color: '#C0C0C0'\r\n};\r\n\r\nclass Stations extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      stations: [],\r\n      currentPage: 1,\r\n      totalPages: 1,\r\n      error: null,\r\n      nextUrl: 'https://lldev.thespacedevs.com/2.2.0/spacestation/',\r\n      previousUrl: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchStations(1);\r\n  }\r\n\r\n  fetchStations = (page, previous = false) => {\r\n    const url = previous ? this.state.previousUrl : this.state.nextUrl;\r\n\r\n    axios\r\n      .get(url)\r\n      .then((response) => {\r\n        this.setState({\r\n          stations: response.data.results,\r\n          totalPages: Math.ceil(response.data.count / 10),\r\n          currentPage: page,\r\n          error: null,\r\n          nextUrl: response.data.next,\r\n          previousUrl: response.data.previous,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ error: 'Failed to fetch launch data' });\r\n      });\r\n  }\r\n\r\n  handlePageChange = (newPage, isNext) => {\r\n    if (isNext) {\r\n      this.fetchStations(newPage);\r\n    } else {\r\n      this.fetchStations(newPage, true);\r\n    }\r\n  }\r\n\r\n  formatDate(dateString) {\r\n    const [year, month, day] = dateString.split('-');\r\n    const formattedDate = `${day}-${month}-${year}`;\r\n    return formattedDate;\r\n  }\r\n\r\n  render() {\r\n    const { stations, error, currentPage, totalPages } = this.state;\r\n\r\n    return (\r\n      <div style={{ \r\n        padding: '50px',\r\n        paddingTop: '15px',\r\n        color: '#C0C0C0' }}>\r\n        <h1 className=\"text-4xl flex justify-center items-center\"><strong>List of Space Stations</strong></h1>\r\n        <Grid container spacing={2}>\r\n          {error ? (\r\n            <p>Error: {error}</p>\r\n          ) : (\r\n            stations.map((station) => (\r\n              <Grid item xs={12} sm={6} md={4} key={station.id}>\r\n                <Card Card elevated sx={{ boxShadow: 3 }} style={cardStyles}>\r\n                  <CardContent>\r\n                    <Typography variant=\"h6\"><strong>{station.name}</strong></Typography>\r\n                    <Typography><strong>Status:</strong> {station.status.name}</Typography>\r\n                    <Typography><strong>Orbit:</strong> {station.orbit}</Typography>\r\n                    <Typography><strong>Founded:</strong> {this.formatDate(station.founded)}</Typography>\r\n                    <Typography>{station.deorbited ? (<p><strong>Deorbited:</strong> {this.formatDate(station.deorbited)}</p>): <p><strong>Deorbited:</strong> Still in use</p>}</Typography>\r\n                    {station.image_url ? (\r\n                  <img src={station.image_url} alt={`${station.name} Logo`} style={{ maxWidth: '300px' }} />\r\n                ) : (\r\n                  <p>No Logo</p>\r\n                )}\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n            ))\r\n          )}\r\n        </Grid>\r\n        \r\n        \r\n        {error && <p>Error: {error}</p>}\r\n        <div>\r\n          <p className=\"m-10\">Page {currentPage} of {totalPages}</p>\r\n          <button className=\"bg-blue-500 hover:bg-blue-400 text-white font-bold py-2 px-4 border-b-4 border-blue-700 hover:border-blue-500 rounded m-10\" onClick={() => this.handlePageChange(currentPage - 1, false)} disabled={currentPage === 1}>\r\n            Previous Page\r\n          </button>\r\n          <button className=\"bg-blue-500 hover-bg-blue-400 text-white font-bold py-2 px-4 border-b-4 border-blue-700 hover:border-blue-500 rounded\" onClick={() => this.handlePageChange(currentPage + 1, true)} disabled={currentPage === totalPages}>\r\n            Next Page\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Stations;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Grid, Card, CardContent, Typography } from '@mui/material';\r\n\r\nconst cardStyles = {\r\n  height: '100%',\r\n  backgroundColor: 'rgba(0, 51, 102, 0.4)',\r\n  boxShadow: 20\r\n};\r\n\r\nclass Patches extends Component {\r\n  \r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      patches: [],\r\n      currentPage: 1,\r\n      totalPages: 1,\r\n      error: null,\r\n      nextUrl: 'https://lldev.thespacedevs.com/2.2.0/mission_patch/',\r\n      previousUrl: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchPatches(1);\r\n  }\r\n\r\n  fetchPatches = (page) => {\r\n    let url = this.state.nextUrl; // Default to nextUrl\r\n\r\n    if (page < this.state.currentPage) {\r\n      // If we're going back, use the previousUrl\r\n      url = this.state.previousUrl;\r\n    }\r\n\r\n    axios\r\n      .get(url)\r\n      .then((response) => {\r\n        this.setState({\r\n          patches: response.data.results,\r\n          totalPages: Math.ceil(response.data.count / 10),\r\n          currentPage: page,\r\n          error: null,\r\n          nextUrl: response.data.next,\r\n          previousUrl: response.data.previous,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ error: 'Failed to fetch patches data' });\r\n      });\r\n  }\r\n\r\n  handlePageChange = (newPage) => {\r\n    this.fetchPatches(newPage);\r\n  }\r\n\r\n  render() {\r\n    const { patches, error, currentPage, totalPages } = this.state;\r\n\r\n    return (\r\n      <div style={{ \r\n        /* backgroundImage: `url(\"https://news.mit.edu/sites/default/files/images/202306/MIT-3q-FirstLight-01-press.jpg\")`, \r\n        backgroundColor: '#0b3d91',        */\r\n        padding: '50px',\r\n        paddingTop: '15px'\r\n      }}>\r\n        <h1 className=\"text-4xl flex justify-center items-center mb-10 pb-10\" style={{color: '#C0C0C0'}}><strong>List of Mission patches</strong></h1>\r\n        {error ? (\r\n          <p>Error: {error}</p>\r\n        ) : (\r\n          <Grid container spacing={2}>\r\n          {patches.map((patch) => (\r\n            <Grid item key={patch.id} xs={12} sm={6} md={4} lg={3}>\r\n              <Card elevated sx={{ boxShadow: 3 }} style={cardStyles}>\r\n                <CardContent>\r\n                  <Typography variant=\"h5\" component=\"div\" style={{color: '#C0C0C0'}}>\r\n                    <strong>Agency: {patch.agency.name}</strong>\r\n                  </Typography>\r\n                  <Typography variant=\"h5\" component=\"div\" style={{color: '#C0C0C0'}}>\r\n                    <strong>Mission: {patch.name}</strong>\r\n                  </Typography>\r\n                  {patch.image_url ? (\r\n                    <img\r\n                      src={patch.image_url}\r\n                      alt={`${patch.name} Logo`}\r\n                      style={{ maxWidth: '100%' }}\r\n                    />\r\n                  ) : (\r\n                    <p style={{color: '#C0C0C0'}}>No Logo</p>\r\n                  )}\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n       \r\n        )}\r\n\r\n        <div>\r\n          <p className=\"m-10\" style={{color: '#C0C0C0'}}>Page {currentPage} of {totalPages}</p>\r\n          <button className=\"bg-blue-500 hover:bg-blue-400 text-white font-bold py-2 px-4 border-b-4 border-blue-700 hover:border-blue-500 rounded m-10\" onClick={() => this.handlePageChange(currentPage - 1)} disabled={currentPage === 1}>\r\n            Previous Page\r\n          </button>\r\n          <button className=\"bg-blue-500 hover-bg-blue-400 text-white font-bold py-2 px-4 border-b-4 border-blue-700 hover:border-blue-500 rounded\" onClick={() => this.handlePageChange(currentPage + 1)} disabled={currentPage === totalPages}>\r\n            Next Page\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Patches;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nfunction AgencyDetail() {\r\n  const { id } = useParams();\r\n  const [agencyData, setAgencyData] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Fetch agency details using the id\r\n    axios\r\n      .get(`https://lldev.thespacedevs.com/2.2.0/agencies/${id}`)\r\n      .then((response) => {\r\n        setAgencyData(response.data);\r\n      })\r\n      .catch((error) => {\r\n        setError('Failed to fetch agency details');\r\n      });\r\n  }, [id]);\r\n\r\n  return (\r\n    <div>\r\n      {error ? (\r\n        <p>Error: {error}</p>\r\n      ) : agencyData ? (\r\n        <div>\r\n          <h1 className=\"text-4xl flex justify-center items-center\">\r\n            <strong>Agency Details</strong>\r\n          </h1>\r\n          <h2 className=\"text-2xl\">\r\n            <strong>{agencyData.name}</strong>\r\n          </h2>\r\n          {agencyData.logo_url ? (\r\n            <img\r\n              src={agencyData.logo_url}\r\n              alt={`${agencyData.name} Logo`}\r\n              style={{ maxWidth: '300px' }}\r\n            />\r\n          ) : (\r\n            <p>No Logo</p>\r\n          )}\r\n          {agencyData.image_url ? (\r\n            <img\r\n              src={agencyData.image_url}\r\n              alt={`${agencyData.name} Logo`}\r\n              style={{ maxWidth: '300px' }}\r\n            />\r\n          ) : (\r\n            <p>No Image</p>\r\n          )}\r\n          <p>Country: {agencyData.country_code}</p>\r\n          <p>Type: {agencyData.type}</p>\r\n          <p>Description: {agencyData.description}</p>\r\n          <p>Founded: {agencyData.founding_year}</p>\r\n          {/* Display more agency details as needed */}\r\n        </div>\r\n      ) : (\r\n        <p>Loading agency details...</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AgencyDetail;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nfunction PlanetDetails() {\r\n  const { id } = useParams();\r\n  const [planetData, setPlanetData] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Fetch agency details using the id\r\n    axios\r\n      .get(`https://api.le-systeme-solaire.net/rest/bodies/${id}`)\r\n      .then((response) => {\r\n        setPlanetData(response.data);\r\n      })\r\n      .catch((error) => {\r\n        setError('Failed to fetch planet details');\r\n      });\r\n  }, [id]);\r\n\r\n  return (\r\n    <div className=\"p-4\">\r\n      {error ? (\r\n        <p>Error: {error}</p>\r\n      ) : planetData ? (\r\n        <div>\r\n          <h1 className=\"text-4xl flex justify-center items-center\">\r\n            <strong>{planetData.englishName} Details</strong>\r\n          </h1>\r\n          \r\n          <h2 className=\"2xl\" ><strong>{planetData.englishName}</strong></h2>\r\n          <img className=\"max-w-lg object-scale-down rounded\" style={{ maxHeight: '1000px' }}  src={`/solar/${id}.jpg`}></img>\r\n                <p>Latin name: {planetData.name}</p>\r\n                <p>Mean temperature: {planetData.avgTemp} K ({planetData.avgTemp-273.15} °C)</p>\r\n                <p><strong>Moons</strong></p>\r\n                {planetData.moons && planetData.moons.length > 0 ? (\r\n                  <ol>\r\n                    {planetData.moons.map((moon) => (\r\n                      <li key={moon.rel}>\r\n                        {moon.moon}\r\n                      </li>\r\n                    ))}\r\n                  </ol>\r\n                ) : (\r\n                  <p>No moons for this planet.</p>\r\n                )}\r\n\r\n        </div>\r\n      ) : (\r\n        <p>Loading planet details...</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlanetDetails;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nclass FlightList extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      data: null,\r\n      error: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const apiUrl = 'http://localhost:5000/v1/flights';\r\n\r\n    axios\r\n      .get(apiUrl)\r\n      .then((response) => {\r\n        this.setState({\r\n          data: response.data,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching flight data:', error);\r\n        this.setState({\r\n          error: 'Failed to fetch flight data',\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { data, error } = this.state;\r\n\r\n    return (\r\n      <div style={{color:'white'}}>\r\n        <h1>Flight Tracking Data</h1>\r\n        {error ? (\r\n          <p>Error: {error}</p>\r\n        ) : (\r\n          <pre>{JSON.stringify(data, null, 2)}</pre>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FlightList;\r\n","import React from 'react';\nimport './App.css';\nimport './output.css'\nimport './index.css';\nimport NeoFeed from './components/neofeed';\nimport Header from './components/header';\nimport NextLaunches from './components/nextlaunches';\nimport Home from './components/home';\nimport Astropod from './components/astropod';\nimport Solar from './components/solar';\nimport Agencies from './components/agencies'\nimport Stations from './components/stations';\nimport Patches from './components/patches';\nimport AgencyDetail from './components/agencydetail';\nimport PlanetDetails from './components/planetdetails';\nimport { BrowserRouter as Router, Route, Link, Switch, Routes } from 'react-router-dom';\nimport FlightList from './components/flightlist';\n\n\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/neofeed\" element={<NeoFeed />} />\n        <Route path=\"/nextlaunches\" element={<NextLaunches />} />\n        <Route path=\"/photo\" element={<Astropod />} />\n        <Route path=\"/planets\" element={<Solar />} />\n        <Route path=\"/agencies\" element={<Agencies />} />\n        <Route path=\"/stations\" element={<Stations />} />     \n        <Route path=\"/patches\" element={<Patches />} />  \n        <Route path=\"/agency/:id\" element={<AgencyDetail />} />   \n        <Route path=\"/planet/:id\" element={<PlanetDetails />} />  \n        <Route path=\"/flights\" element={<FlightList />} /> \n      </Routes>\n    </Router>\n);\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}